# EMBEDDED SERVER CONFIGURATION (ServerProperties)
server.port=8080

# H2 Web Console (H2ConsoleProperties)
spring.h2.console.enabled=true
spring.h2.console.path=/h2
#spring.h2.console.settings.trace=false # Enable trace output.
#spring.h2.console.settings.web-allow-others=false # Enable remote access.

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
#spring.data.jpa.repositories.enabled=true # Enable JPA repositories.
#spring.jpa.database= # Target database to operate on, auto-detected by default. Can be alternatively set using the "databasePlatform" property.
#spring.jpa.database-platform= # Name of the target database to operate on, auto-detected by default. Can be alternatively set using the "Database" enum.
#spring.jpa.generate-ddl=false # Initialize the schema on startup.
#spring.jpa.hibernate.ddl-auto= # DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Default to "create-drop" when using an embedded database, "none" otherwise.
#spring.jpa.hibernate.naming.implicit-strategy= # Hibernate 5 implicit naming strategy fully qualified name.
#spring.jpa.hibernate.naming.physical-strategy= # Hibernate 5 physical naming strategy fully qualified name.
#spring.jpa.hibernate.naming.strategy= # Hibernate 4 naming strategy fully qualified name. Not supported with Hibernate 5.
#spring.jpa.hibernate.use-new-id-generator-mappings= # Use Hibernate's newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.
#spring.jpa.open-in-view=true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
#spring.jpa.properties.*= # Additional native properties to set on the JPA provider.
spring.jpa.show-sql=true


# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.continue-on-error=false # Do not stop if an error occurs while initializing the database.
#spring.datasource.data= # Data (DML) script resource references.
#spring.datasource.data-username= # User of the database to execute DML scripts (if different).
#spring.datasource.data-password= # Password of the database to execute DML scripts (if different).
#spring.datasource.dbcp2.*= # Commons DBCP2 specific settings
#spring.datasource.driver-class-name= # Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
#spring.datasource.generate-unique-name=false # Generate a random datasource name.
#spring.datasource.hikari.*= # Hikari specific settings
#spring.datasource.initialize=true # Populate the database using 'data.sql'.
#spring.datasource.jmx-enabled=false # Enable JMX support (if provided by the underlying pool).
#spring.datasource.jndi-name= # JNDI location of the datasource. Class, url, username & password are ignored when set.
#spring.datasource.name=testdb # Name of the datasource.
#spring.datasource.password= # Login password of the database.
#spring.datasource.platform=all # Platform to use in the schema resource (schema-${platform}.sql).
#spring.datasource.schema= # Schema (DDL) script resource references.
#spring.datasource.schema-username= # User of the database to execute DDL scripts (if different).
#spring.datasource.schema-password= # Password of the database to execute DDL scripts (if different).
#spring.datasource.separator=; # Statement separator in SQL initialization scripts.
#spring.datasource.sql-script-encoding= # SQL scripts encoding.
#spring.datasource.tomcat.*= # Tomcat datasource specific settings
#spring.datasource.type= # Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
spring.datasource.url=jdbc:h2:mem:templateDatabase
#spring.datasource.username= # Login user of the database.
#spring.datasource.xa.data-source-class-name= # XA datasource fully qualified name.
#spring.datasource.xa.properties= # Properties to pass to the XA data source.

# ----------------------------------------
# SECURITY PROPERTIES
# ----------------------------------------
# SECURITY (SecurityProperties)
#security.basic.authorize-mode=role # Security authorize mode to apply.
security.basic.enabled=false
#security.basic.path=/** # Comma-separated list of paths to secure.
#security.basic.realm=Spring # HTTP basic realm name.
#security.enable-csrf=false # Enable Cross Site Request Forgery support.
#security.filter-order=0 # Security filter chain order.
#security.filter-dispatcher-types=ASYNC, FORWARD, INCLUDE, REQUEST # Security filter chain dispatcher types.
#security.headers.cache=true # Enable cache control HTTP headers.
#security.headers.content-security-policy= # Value for content security policy header.
#security.headers.content-security-policy-mode=default # Content security policy mode.
#security.headers.content-type=true # Enable "X-Content-Type-Options" header.
#security.headers.frame=true # Enable "X-Frame-Options" header.
#security.headers.hsts=all # HTTP Strict Transport Security (HSTS) mode (none, domain, all).
#security.headers.xss=true # Enable cross site scripting (XSS) protection.
#security.ignored= # Comma-separated list of paths to exclude from the default secured paths.
#security.require-ssl=false # Enable secure channel for all requests.
#security.sessions=stateless # Session creation policy (always, never, if_required, stateless).
#security.user.name=user # Default user name.
#security.user.password= # Password for the default user name. A random password is logged on startup by default.
#security.user.role=USER # Granted roles for the default user name.

# MANAGEMENT HTTP SERVER (ManagementServerProperties)
#management.add-application-context-header=true # Add the "X-Application-Context" HTTP header in each response.
#management.address= # Network address that the management endpoints should bind to.
#management.context-path= # Management endpoint context-path. For instance `/actuator`
#management.cloudfoundry.enabled= # Enable extended Cloud Foundry actuator endpoints
#management.cloudfoundry.skip-ssl-validation= # Skip SSL verification for Cloud Foundry actuator endpoint security calls
#management.port= # Management endpoint HTTP port. Uses the same port as the application by default. Configure a different port to use management-specific SSL.
management.security.enabled=false
#management.security.roles=ACTUATOR # Comma-separated list of roles that can access the management endpoint.
#management.security.sessions=stateless # Session creating policy to use (always, never, if_required, stateless).
#management.ssl.ciphers= # Supported SSL ciphers. Requires a custom management.port.
#management.ssl.client-auth= # Whether client authentication is wanted ("want") or needed ("need"). Requires a trust store. Requires a custom management.port.
#management.ssl.enabled= # Enable SSL support. Requires a custom management.port.
#management.ssl.enabled-protocols= # Enabled SSL protocols. Requires a custom management.port.
#management.ssl.key-alias= # Alias that identifies the key in the key store. Requires a custom management.port.
#management.ssl.key-password= # Password used to access the key in the key store. Requires a custom management.port.
#management.ssl.key-store= # Path to the key store that holds the SSL certificate (typically a jks file). Requires a custom management.port.
#management.ssl.key-store-password= # Password used to access the key store. Requires a custom management.port.
#management.ssl.key-store-provider= # Provider for the key store. Requires a custom management.port.
#management.ssl.key-store-type= # Type of the key store. Requires a custom management.port.
#management.ssl.protocol=TLS # SSL protocol to use. Requires a custom management.port.
#management.ssl.trust-store= # Trust store that holds SSL certificates. Requires a custom management.port.
#management.ssl.trust-store-password= # Password used to access the trust store. Requires a custom management.port.
#management.ssl.trust-store-provider= # Provider for the trust store. Requires a custom management.port.
#management.ssl.trust-store-type= # Type of the trust store. Requires a custom management.port.

